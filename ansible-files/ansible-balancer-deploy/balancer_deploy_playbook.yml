---

- hosts: all
  become: true

  tasks:
    - name: Install network required system packages
      apt: name=net-tools state=latest update_cache=yes
    
    # In case ansible playbox is re-run after initial deploy.
    - name: Enable Management NIC
      command: ifconfig ens35 up

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'curl', 'python3-pip', 'virtualenv', 'python3-setuptools' ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "nginx"
        source: pull
    
    # Pullling honeypot Image
    - name: Pull default Honeypot Docker image
      docker_image:
        name: "delfer/alpine-ftp-server"
        source: pull
    
    # Pulling Monitoring Agent Image
    - name: Pull default Monitoring Docker image
      docker_image:
        name: "quay.io/prometheus/node-exporter:latest"
        source: pull
    
    # Deploying Honeypot Container
    - name: Create Honeypot Container
      docker_container:
        name: "honeypot"
        image: "delfer/alpine-ftp-server"
        detach: yes
        ports:
          - "2222:21"
        env:
          USERS: "user|VOMDITE"
        state: started
        restart_policy: unless-stopped

    # Deploying Monitoring Agent Container
    - name: Create Moniroting Agent Container
      docker_container:
        name: "prometheus-node"
        image: "quay.io/prometheus/node-exporter:latest"
        detach: yes
        ports:
          - "9100:9100"
        volumes:
          - "/:/host:ro,rslave"
        state: started
        restart_policy: unless-stopped
        
    - name: Create default containers
      docker_container:
        name: "balancer"
        image: "nginx"
        detach: yes
        ports:
          - "80:80"
        volumes:
          - "/docker_data/balancer/:/etc/nginx/"
        state: started
        restart_policy: unless-stopped
    
    - name: Disable Management NIC
      command: ifconfig ens35 down
